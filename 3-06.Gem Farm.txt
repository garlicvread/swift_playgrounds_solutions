/*
Challenge: Decompose multiple patterns into functions and loops.

In this challenge, there are gems to collect and switches to toggle open.
You'll need to identify the patterns for gem collection and switch activation.
Then you'll write a function for each pattern and figure out how many times you'll need to call those functions using loops. 
*/


func turnAround() {
    for i in 1...2 {
        turnRight()
    }
}


func get_2_gems() {
    for i in 1...2 {
        moveForward()
        collectGem()
    }
}


func toggle_twice() {
    for i in 1...2 {
        moveForward()
        toggleSwitch()
    }
}


func forward_twice() {
    for i in 1...2 {
        moveForward()
    }
}


func get_gems_then_toggle_switches() {
    get_2_gems()
    turnAround()
    forward_twice()
    toggle_twice()
    turnAround()
    forward_twice()
    turnLeft()
    moveForward()
}


for i in 1...3 {
    turnRight()
    get_gems_then_toggle_switches()
}
